@use "../definitions/colors";

@use "../definitions/shadows";

//
// Translational Selectable
// This denotes a type of selectable (radio/checkbox) card etc. which moves
// in a certain direction when selected, along with changing its color to a
// more active one. This gives the impression that a card is being drawn
// from under a cover.
//

$theme_ocean_blue: "ocean_blue";
$theme_blood_red:  "blood_red";
$default_theme: $theme_ocean_blue;

@mixin translational_selectable_colors($direction: "up",
                                       $color_theme: $default_theme,
                                       $base_color: #151515,
                                       $base_shadow: colors.$white)
{
  .translation_base {
    background-color: $base_color;
    @include shadows.Uniform(3, $base_shadow);
  }

  .selectable {
    @include translational_selectable_colors_selector_only($direction, $color_theme);
  }
}

@mixin translational_selectable_colors_selector_only($direction: "up",
                                                     $color_theme: $default_theme)
{
  //
  // Since the card lights up from the direction from with it is drawn, when the
  // direction input is upward, a selected selectable will have its down side
  // lighted up in a more active color.
  //
  // Notes:
  // > I do not think activation changed the shadow's color/opacity/height.
  // > The gradient stops are all best-attempt-guesses.
  // > If an inset shadow was used, it was too imperceptible here.
  //
  $angle: 0deg;
  @if ($direction == "up") {
    $angle: 0deg;
  }
  @else if ($direction == "right") {
    $angle: 90deg;
  }
  @else if ($direction == "down") {
    $angle: 180deg;
  }
  @else if ($direction == "left") {
    $angle: 270deg;
  }
  @else {
    @error "The value of $direction (#{$direction}) must be a cardinal " +
           "direction (up/down/left/right).";
  }

  $color_dark_1:  #000;
  $color_dark_2:  #000;
  $color_dark_3:  #000;
  $color_dark_4:  #000;
  $color_border:  #333;
  $color_shadow:  #777;
  $color_light_1: $color_shadow;
  $color_light_2: #555;
  $color_light_3: #222;
  $color_light_4: $color_dark_4;

  @if ($color_theme == $theme_ocean_blue) {
    $color_dark_1: #252d3d;
    $color_dark_2: #191f2c;
    $color_dark_3: #131b27;
    $color_dark_4: #090911;
    $color_border: #242d40;
    $color_shadow: #2e4983;
    $color_light_1: $color_shadow;
    $color_light_2: #293d68;
    $color_light_3: #141c25;
    $color_light_4: $color_dark_4;
  }
  @else if ($color_theme == $theme_blood_red) {
    $color_dark_1: #3d2525;
    $color_dark_2: #2c1919;
    $color_dark_3: #271313;
    $color_dark_4: #110909;
    $color_border: #402424;
    $color_shadow: #cc0d0d;
    $color_light_1: $color_shadow;
    $color_light_2: #871a1a;
    $color_light_3: #320e0e;
    $color_light_4: $color_dark_4;
  }
  @else {
    @error "Unsupported color scheme #{$color_theme} for translational " +
           "selectable.";
  }

  background: $color_dark_1;
  background: linear-gradient($angle,
          $color_dark_1 0%,
          $color_dark_2 30%,
          $color_dark_3 45%,
          $color_dark_4 100%);
  border: solid 1px $color_border;
  @include shadows.Uniform(4, $color_shadow);

  &.disabled  {
    background: linear-gradient($angle,
            rgba($color_dark_1, 0.3) 0%,
            rgba($color_dark_2, 0.3) 30%,
            rgba($color_dark_3, 0.3) 45%,
            rgba($color_dark_4, 0.3) 100%);
    border: solid 1px rgba($color_border, 0.3);
  }

  &.selected {
    background: #2e4983;
    background: linear-gradient($angle,
            $color_light_1 0%,
            $color_light_2 12%,
            $color_light_3 45%,
            $color_light_4 100%);
  }
}

@mixin translational_selectable_dimensions($direction: "up",
                                           $card_length: 300px,
                                           $active_card_length: $card_length * 1.2,
                                           $card_cross: $card_length * 0.6,
                                           $base_width: 64px,
                                           $card_gap: null,
                                           $align_start: false)
{
  overflow: hidden;
  display: flex;
  flex-wrap: nowrap;
  position: relative;

  @if ($align_start) {
    justify-content: flex-start;
    @if ($card_gap != null) {
      gap: $card_gap;
    }
    @else {
      gap: 16px;
    }
  }
  @else {
    @if ($card_gap != null) {
      justify-content: center;
      gap: $card_gap;
    }
    @else {
      justify-content: space-evenly;
    }
  }

  .translation_base {
    position: absolute;
  }

  padding: 16px;

  @if ($direction == "up") {
    flex-direction: row;
    align-items: flex-end;
    padding-bottom: $base_width;

    .translation_base {
      width: 100%;
      height: $base_width;
      left: 0;
      right: 0;
      bottom: 0;
    }

    .selectable {
      width: $card_cross;
      height: $card_length;

      &.selected {
        height: $active_card_length;
      }
    }
  }
  @else if ($direction == "right") {
    flex-direction: column;
    align-items: flex-start;
    padding-left: $base_width;

    .translation_base {
      width: $base_width;
      height: 100%;
      top: 0;
      left: 0;
      bottom: 0;
    }

    .selectable {
      height: $card_cross;
      width: $card_length;

      &.selected {
        width: $active_card_length;
      }
    }
  }
  @else if ($direction == "down") {
    flex-direction: row;
    align-items: flex-start;
    padding-top: $base_width;

    .translation_base {
      width: 100%;
      height: $base_width;
      left: 0;
      right: 0;
      top: 0;
    }

    .selectable {
      width: $card_cross;
      height: $card_length;

      &.selected {
        height: $active_card_length;
      }
    }
  }
  @else if ($direction == "left") {
    flex-direction: column;
    align-items: flex-end;
    padding-right: $base_width;

    .translation_base {
      width: $base_width;
      height: 100%;
      top: 0;
      right: 0;
      bottom: 0;
    }

    .selectable {
      height: $card_cross;
      width: $card_length;

      &.selected {
        width: $active_card_length;
      }
    }
  }
  @else {
    @error "The value of $direction (#{$direction}) must be a cardinal " +
           "direction (up/down/left/right).";
  }
}

@mixin translational_selectable_misc()
{
  .selectable {
    transition: all 200ms;

    &:not(.disabled) {
      cursor: pointer;
    }
  }
}

#workshop {

  /**
   * Selectable container styles. This sets the size/color of the cards
   * themselves.
   */
  .selectable_radio_container.translational_flags {
    @include translational_selectable_misc();
    @include translational_selectable_colors("up");
    @include translational_selectable_dimensions("up",
                                                 $card_length: 350px,
                                                 $card_gap: 32px);

    /**
     * Selectable content styling. This formats the interiors of the cards.
     */
    .selectable {
      padding: 12px;
      padding-top: 16px;
      display: flex;
      flex-flow: column nowrap;
      align-items: center;
      justify-content: flex-start;
      overflow: hidden;

      * {
        flex-grow: 0;
      }

      // With an aspect ratio of 1:1 this ensures all cards would have the
      // same height for the image.
      img.icon_img {
        width: 100%;
        object-fit: contain;
      }

      .title {
        color: colors.$white;
        font-family: "Montserrat", sans-serif;
        border-bottom: solid 1px colors.$grey;
        height: 50px !important;
        text-align: center;
        margin-bottom: 8px;

        font-size: 16px;
      }

      .subtext {
        color: colors.$true_grey;
        font-size: 14px;
      }

      .confirm {
        display: none;
        padding-bottom: 16px;
        flex-direction: column;
        align-items: center;
        justify-content: flex-end;
        flex-grow: 1;
        gap: 4px;

        .confirm_msg {
          color: colors.$true_grey;
          font-size: 11px;
        }
        i {
          display: block;
          color: colors.$white;
          text-shadow: 0 0 5px rgba(colors.$white, 0.5);
        }
      }

      &.selected {
        .confirm {
          display: flex;
        }
      }
    }
  }
}

#beastiary {
  .selectable_radio_container.translational_flags {
    @include translational_selectable_misc();
    @include translational_selectable_colors("right",
                                             $base_color: #77777f,
                                             $base_shadow: colors.$black);
    @include translational_selectable_dimensions("right",
                                                 $card_length: 96px,
                                                 $active_card_length: 256px,
                                                 $card_cross: 84px,
                                                 $base_width: 76px,
                                                 $card_gap: 8px,
                                                 $align_start: true);

    .selectable.danger_1 {
      @include translational_selectable_colors_selector_only("right", $theme_blood_red);
    }
  }
}